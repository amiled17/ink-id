Bootstrap: library
From: ubuntu:18.04


%files
  # Copy the current contents of the local ink-id directory into the
  # root directory inside the container.


  <full path to /ink-id/>   /ink-id/ 


%post
  # To compensate for the APT problem with the ubuntu 18.04 image
  # This may not be necessary once the image is corrected

  echo "deb http://us.archive.ubuntu.com/ubuntu/ bionic main restricted
  deb http://us.archive.ubuntu.com/ubuntu/ bionic-updates main restricted
  deb http://us.archive.ubuntu.com/ubuntu/ bionic universe
  deb http://us.archive.ubuntu.com/ubuntu/ bionic-updates universe
  deb http://us.archive.ubuntu.com/ubuntu/ bionic multiverse
  deb http://us.archive.ubuntu.com/ubuntu/ bionic-updates multiverse
  deb http://us.archive.ubuntu.com/ubuntu/ bionic-backports main restricted universe multiverse
  deb http://security.ubuntu.com/ubuntu bionic-security main restricted
  deb http://security.ubuntu.com/ubuntu bionic-security universe
  deb http://security.ubuntu.com/ubuntu bionic-security multiverse" >> /etc/apt/sources.list;

  apt -y  update
  apt install -y python3-dev python3-pip wget git-all

  pip3 install -U virtualenv
  virtualenv -p python3 tensorflow
  . /tensorflow/bin/activate
  pip install --upgrade pip
  pip install --upgrade tensorflow
  pip install --upgrade Cython

  # Install ink-id
  pip install -e /ink-id/.
  

%runscript
  if [ $# -lt 1 ]; then
      echo "Usage: ./container RUN COMMAND"
      exit 1
  fi
  
  . /tensorflow/bin/activate
  exec "$@"  


%test
  . /tensorflow/bin/activate
  inkid-train-and-predict -h


%labels
  Maintainer Mami Hayashida <mami.hayashida@uky.edu>
  Version v.0.1

%help
  This is a Singularity container for testing Ink-id software using the CPU version
  of tensorflow. It assumes at the time of container-building, there is a directory containing
  all the files necessary for inkid software installation. Unlike the inkid-cpu.def script, 
  this script does NOT download the code from git. Instead, it simply copies the current
  version of the code residing on the host system.

  Run scripts as shown below: 
  	singularity run inkid-cpu-copy-code.sif inkid-train-and-predict <args>
  	singularity run inkid-cpu-copy-code.sif python <python_script>.py <args>
 
  To use singularity shell, remember to activate the virtualenv environment first
        . /tensorflow/bin/activate


